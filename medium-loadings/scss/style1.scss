@import 'colors';
@import 'variables';
@import 'config';
@import 'functions';

.type1 {
  min-width: 33%;
  $size: 80px;
  $border-width: 3px;
  @include centerChildren();

  * {
    position: absolute;
    border-radius: 50%;
  }
  .ring-1 {
    $rotation: 45;
    width: $size;
    height: $size;
    border: solid $border-width $orange;
    transform: rotate($rotation + deg);
    @include clipPathForCircle(0.3);
    @include rotateAnimation($rotation, 1);
    animation: rotate1 2s 0s linear infinite;
  }
  .ring-2 {
    $rotation: 15;
    $ring2size: $size * 0.7;
    width: $ring2size;
    height: $ring2size;
    border: solid $border-width $green;
    @include clipPathForCircle(0.5);
    transform: rotate($rotation + deg);
    @include rotateAnimation($rotation, 2);
    animation: rotate2 1.5s 0s linear infinite;
  }
  .ring-3 {
    $rotation: -45;
    $ring3size: $size * 0.4;
    width: $ring3size;
    height: $ring3size;
    border: solid $border-width $blue;
    @include clipPathForCircle(0.7);
    transform: rotate($rotation + deg);
    @include rotateAnimation($rotation, 3);
    animation: rotate3 1s 0s linear infinite;
  }
  .ring-4 {
    $rotation: -15;
    $ring4size: $size * 0.15;
    width: $ring4size;
    height: $ring4size;
    border: solid $border-width $red;
    @include clipPathForCircle(0.8);
    transform: rotate($rotation + deg);
    @include rotateAnimation($rotation, 4);
    animation: rotate4 2s 0s linear infinite;
  }
}

.type2 {
  min-width: 33%;
  $size: 80px;
  width: $size;
  height: $size;
  @include centerChildren();
  * {
    position: absolute;
    width: $size;
    height: $size;
    @include centerChildren();
  }
  .dot-1 {
    $rotate-deg: $rotate-starting;
    transform: rotate($rotate-deg + deg);
    @include rotateAnimation($rotate-deg, dot1);
    animation: rotatedot1 $rotate-duration - $rotate-interval * 3 + s
      $rotate-interval * 3 + s ease-in-out infinite;
    &:after {
      @include dot($orange);
    }
  }
  .dot-2 {
    $rotate-deg: $rotate-step + $rotate-starting;
    transform: rotate($rotate-deg + deg);
    @include rotateAnimation($rotate-deg, dot2);
    animation: rotatedot2 $rotate-duration - $rotate-interval * 2 + s
      $rotate-interval * 2 + s ease-in-out infinite;
    &:after {
      @include dot($blue);
    }
  }
  .dot-3 {
    $rotate-deg: $rotate-step * 2 + $rotate-starting;
    transform: rotate($rotate-deg + deg);
    @include rotateAnimation($rotate-deg, dot3);
    animation: rotatedot3 $rotate-duration - $rotate-interval * 1 + s
      $rotate-interval * 1 + s ease-in-out infinite;
    &:after {
      @include dot($red);
    }
  }
  .dot-4 {
    $rotate-deg: $rotate-step * 3 + $rotate-starting;
    transform: rotate($rotate-deg + deg);
    @include rotateAnimation($rotate-deg, dot4);
    animation: rotatedot4 $rotate-duration - $rotate-interval * 0 + s
      $rotate-interval * 0 + s ease-in-out infinite;
    &:after {
      @include dot($green);
    }
  }
}

.type3 {
  min-width: 33%;
  $size: 80px;
  width: $size;
  height: $size;
  @include rotateAnimation(0, fan);
  animation: rotatefan 2s 0s cubic-bezier(0.8, 0, 0.2, 1) infinite;

  @include centerChildren();
  * {
    position: absolute;
    width: $size;
    height: $size;
    border-radius: 50%;
    @include centerChildren();
    @include clipPathForTriangle(0.3);
  }
  .fan-1 {
    transform: rotate(0deg);
    background-color: $orange;
  }
  .fan-2 {
    transform: rotate(90deg);
    background-color: $green;
  }
  .fan-3 {
    transform: rotate(180deg);
    background-color: $red;
  }
  .fan-4 {
    transform: rotate(270deg);
    background-color: $blue;
  }
}
